<?php

namespace App\Command;

use App\Dto\UserRegistrationDto;
use App\Service\UserService;
use App\Validator\UniqueEntityField;
use Doctrine\ORM\EntityManagerInterface;
use Faker\Factory;
use Faker\Generator;
use Symfony\Bundle\MakerBundle\ConsoleStyle;
use Symfony\Bundle\MakerBundle\Validator;
use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Style\SymfonyStyle;
use Symfony\Component\Validator\Constraints\Email;
use Symfony\Component\Validator\Constraints\NotBlank;
use Symfony\Component\Validator\ConstraintViolationInterface;
use Symfony\Component\Validator\Validation;
use Symfony\Component\Validator\Validator\ValidatorInterface;
use App\Entity\User;

#[AsCommand(
    name: 'app:make-user',
    description: 'Makes user through CLI',
)]
class MakeUserCommand extends Command
{
    private Generator $faker;

    public function __construct(
        private readonly UserService $userService,
        private readonly ValidatorInterface $validator,
    ) {
        $this->faker = Factory::create();
        parent::__construct();
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $io = new SymfonyStyle($input, $output);
        $username = $this->askForUsername($io);
        $email = $this->askForEmail($io);
        $password = $this->askForPassword($io);

        $userDto = new UserRegistrationDto($password, $email, $username);
        $this->userService->registerUser($userDto);

        $io->success('User created successfully!');

        return Command::SUCCESS;
    }

    private function askForUsername(SymfonyStyle $io): string
    {
        return $io->ask('Please enter username:', null, Validation::createCallable(
            $this->validator,
            new NotBlank(),
            new UniqueEntityField(entity: User::class, field: 'username'),
        ));
    }

    private function askForEmail(SymfonyStyle $io): string
    {
        return $io->ask('Please enter email.', null, Validation::createCallable(
            $this->validator,
            new NotBlank(),
            new Email(),
            new UniqueEntityField(entity: User::class, field: 'username'),
        ));
    }

    private function askForPassword(SymfonyStyle $io): string
    {
        $password = $io->askHidden('Please enter password or leave blank if you want password to be generated.');
        if ($password === '' || $password === null) {
            $password = $this->generatePassword();
            $io->info(\sprintf('Autogenerated password: %s, please write it down!', $password));
        }

        return $password;
    }

    private function generatePassword(): string
    {
        return $this->faker->password(8, 8);
    }
}
